string
literal
wikipedia
free
encyclopedia
jump
navigation
jump
search
notation
representing
string
source
code
string
literal
anonymous
string
type
literal
representation
string
value
source
code
computer
program
modern
programming
languages
usually
quoted
sequence
characters
formally
bracketed
delimiters
x
foo
foo
string
literal
value
foo
quotes
part
value
one
must
use
method
escape
sequences
avoid
problem
delimiter
collision
allow
delimiters
embedded
string
however
numerous
alternate
notations
specifying
string
literals
particularly
complicated
cases
exact
notation
depends
individual
programming
language
question
nevertheless
general
guidelines
modern
programming
languages
follow
contents
syntax
bracketed
delimiters
paired
delimiters
whitespace
delimiters
delimiters
declarative
notation
constructor
functions
delimiter
collision
doubling
dual
quoting
multiple
quoting
constructor
functions
escape
sequences
nested
escaping
raw
strings
multiline
string
literals
string
literal
concatenation
motivation
problems
different
kinds
strings
variable
interpolation
embedding
source
code
string
literals
see
also
notes
references
external
links
syntax
edit
bracketed
delimiters
edit
modern
programming
languages
use
bracket
delimiters
also
balanced
delimiters
specify
string
literals
double
quotations
common
quoting
delimiters
used
hi
empty
string
literally
written
pair
quotes
character
languages
either
allow
mandate
use
single
quotations
instead
double
quotations
string
must
begin
end
kind
quotation
mark
type
quotation
mark
may
may
give
slightly
different
semantics
hi
quotation
marks
unpaired
character
used
opener
closer
hangover
typewriter
technology
precursor
earliest
computer
input
output
devices
terms
regular
expressions
basic
quoted
string
literal
given
means
string
literal
written
quote
followed
zero
one
non
quote
characters
followed
quote
practice
often
complicated
escaping
delimiters
excluding
newlines
paired
delimiters
edit
number
languages
provide
paired
delimiters
opening
closing
delimiters
different
also
often
allow
nested
strings
delimiters
embedded
long
paired
still
result
delimiter
collision
embedding
unpaired
closing
delimiter
examples
include
postscript
uses
parentheses
quick
brown
fox
uses
backtick
starting
delimiter
apostrophe
ending
delimiter
tcl
allows
quotes
interpolated
strings
braces
raw
strings
quick
brown
fox
quick
brown
fox
derives
single
quotations
unix
shells
use
braces
c
compound
statements
since
blocks
code
tcl
syntactically
thing
string
literals
delimiters
paired
essential
making
feasible
unicode
character
set
includes
paired
separate
opening
closing
versions
single
double
quotations
used
text
mostly
languages
english
rarely
used
programming
languages
ascii
preferred
included
ascii
hi
hi
hi
hi
paired
double
quotations
used
visual
basic
net
many
programming
languages
accept
unpaired
marks
preferred
compatibility
easier
type
wide
range
keyboards
even
languages
permitted
many
projects
forbid
use
source
code
whitespace
delimiters
edit
string
literals
might
ended
newlines
one
example
mediawiki
template
parameters
navbox
name
nulls
title
wikt
null
nulls
computing
might
special
syntax
multi
line
strings
yaml
string
literals
may
specified
relative
positioning
whitespace
indentation
title
example
multi
line
string
yaml
body
multi
line
string
special
metacharacters
may
appear
extent
string
represented
indentation
delimiters
edit
programming
languages
perl
php
allow
string
literals
without
delimiters
contexts
following
perl
program
example
red
green
blue
string
literals
unquoted
map
red
x
f
blue
x
f
green
xf
perl
treats
non
reserved
sequences
alphanumeric
characters
string
literals
contexts
example
following
two
lines
perl
equivalent
x
x
declarative
notation
edit
original
fortran
programming
language
example
string
literals
written
called
hollerith
notation
decimal
count
number
characters
followed
letter
h
characters
string
han
example
hollerith
string
literal
declarative
notation
style
contrasted
bracketed
delimiter
quoting
require
use
balanced
bracketed
characters
either
side
string
advantages
eliminates
text
searching
delimiter
character
therefore
requires
significantly
less
overhead
avoids
problem
delimiter
collision
enables
inclusion
metacharacters
might
otherwise
mistaken
commands
used
quite
effective
data
compression
plain
text
strings
citation
needed
drawbacks
type
notation
error
prone
used
manual
entry
programmers
special
care
needed
case
multi
byte
encodings
however
drawback
prefix
generated
algorithm
likely
case
citation
needed
constructor
functions
edit
c
two
styles
string
one
inherited
c
delimited
safer
std
string
c
standard
library
std
string
class
frequently
used
way
string
literal
would
used
languages
often
preferred
c
style
strings
greater
flexibility
safety
comes
performance
penalty
string
literals
std
string
usually
allocates
memory
dynamically
must
copy
c
style
string
literal
run
time
c
literal
c
strings
c
allows
c
string
end
literal
normal
constructor
syntax
used
example
std
string
str
initializer
syntax
std
string
str
converting
constructor
syntax
std
string
str
string
explicit
constructor
syntax
interpretation
since
c
also
new
constructor
syntax
std
string
str
uniform
initializer
syntax
auto
str
constexpr
literal
syntax
delimiter
collision
edit
mw
parser
output
hatnote
font
style
italic
mw
parser
output
div
hatnote
padding
left
em
margin
bottom
em
mw
parser
output
hatnote
font
style
normal
mw
parser
output
hatnote
link
hatnote
margin
top
em
main
article
delimiter
collision
using
quoting
one
wishes
represent
delimiter
string
literal
one
runs
problem
delimiter
collision
example
delimiter
double
quote
one
cannot
simply
represent
double
quote
literal
second
quote
interpreted
end
string
literal
value
string
similarly
one
cannot
write
quotes
invalid
middle
quoted
portion
instead
interpreted
outside
quotes
various
solutions
general
purpose
using
escape
sequences
quotes
properly
escaped
many
solutions
paired
quotes
braces
tcl
allow
nested
strings
foo
bar
zork
otherwise
solve
problem
delimiter
collision
since
unbalanced
closing
delimiter
cannot
simply
included
doubling
edit
number
languages
including
pascal
basic
dcl
smalltalk
sql
j
fortran
avoid
delimiter
collision
doubling
quotation
marks
intended
part
string
literal
pascal
string
contains
two
apostrophes
said
hear
dual
quoting
edit
languages
fortran
modula
javascript
python
php
allow
one
quoting
delimiter
case
two
possible
delimiters
known
dual
quoting
typically
consists
allowing
programmer
use
either
single
quotations
double
quotations
interchangeably
literal
must
use
one
john
apple
said
hear
allow
single
literal
delimiters
however
worked
around
using
several
literals
using
string
concatenation
said
john
apple
python
string
literal
concatenation
consecutive
string
literals
concatenated
even
without
operator
reduced
said
john
apple
supports
quoting
delimiters
strings
starting
q
ending
similarly
delimiter
character
also
supports
document
style
strings
via
similar
syntax
programming
languages
sh
perl
different
delimiters
treated
differently
string
interpolation
thus
care
must
taken
choosing
delimiter
use
see
different
kinds
strings
multiple
quoting
edit
extension
use
multiple
quoting
allows
author
choose
characters
specify
bounds
string
literal
example
perl
qq
said
hear
qq
said
hear
qq
said
hear
produce
desired
result
although
notation
flexible
languages
support
perl
ruby
influenced
perl
c
also
support
c
raw
strings
various
delimiters
beginning
r
delimiter
end
delimiter
delimiter
zero
characters
long
may
contain
member
basic
source
character
set
except
whitespace
characters
parentheses
backslash
variant
multiple
quoting
use
document
style
strings
lua
provides
limited
form
multiple
quoting
particularly
allow
nesting
long
comments
embedded
strings
normally
one
uses
delimit
literal
strings
initial
newline
stripped
otherwise
raw
opening
brackets
include
number
equal
signs
closing
brackets
number
signs
close
string
example
local
ls
notation
used
windows
paths
local
path
c
windows
fonts
multiple
quoting
particularly
useful
regular
expressions
contain
usual
delimiters
quotes
avoids
needing
escape
early
example
sed
substitution
command
regex
replacement
default
slash
delimiters
replaced
another
character
regex
replacement
constructor
functions
edit
another
option
rarely
used
modern
languages
use
function
construct
string
rather
representing
via
literal
generally
used
modern
languages
computation
done
run
time
rather
parse
time
example
early
forms
basic
include
escape
sequences
workarounds
listed
thus
one
instead
required
use
chr
function
returns
string
containing
character
corresponding
argument
ascii
quotation
mark
value
represent
string
quotes
ascii
system
one
would
write
said
chr
hear
chr
c
similar
facility
available
via
sprintf
c
character
format
specifier
though
presence
workarounds
generally
used
sprintf
cin
quotes
c
constructor
functions
also
used
represent
nonprinting
characters
though
escape
sequences
generally
used
instead
similar
technique
used
c
std
string
stringification
operator
escape
sequences
edit
main
article
escape
sequence
escape
sequences
general
technique
representing
characters
otherwise
difficult
represent
directly
including
delimiters
nonprinting
characters
backspaces
newlines
whitespace
characters
otherwise
impossible
distinguish
visually
long
history
accordingly
widely
used
string
literals
adding
escape
sequence
either
single
character
throughout
string
known
escaping
one
character
chosen
prefix
give
encodings
characters
difficult
impossible
include
directly
commonly
backslash
addition
characters
key
point
backslash
encoded
double
backslash
delimited
strings
delimiter
encoded
escaping
say
regular
expression
escaped
strings
given
follows
found
ansi
c
specification
meaning
quote
followed
zero
either
escaped
character
backslash
followed
something
possibly
backslash
quote
non
escape
non
quote
character
ending
quote
issue
distinguishing
terminating
quote
quote
preceded
backslash
may
escaped
multiple
characters
follow
backslash
uffff
depending
escaping
scheme
escaped
string
must
lexically
analyzed
converting
escaped
string
unescaped
string
represents
done
evaluation
phase
overall
lexing
computer
language
evaluator
lexer
overall
language
executes
lexer
escaped
string
literals
among
things
must
possible
encode
character
normally
terminates
string
constant
plus
must
way
specify
escape
character
escape
sequences
always
pretty
easy
use
many
compilers
also
offer
means
solving
common
problems
escape
sequences
however
solve
every
delimiter
problem
compilers
interpret
escape
sequences
escape
character
inside
string
literal
means
start
escape
sequence
every
escape
sequence
specifies
one
character
placed
directly
string
actual
number
characters
required
escape
sequence
varies
escape
character
top
left
keyboard
editor
translate
therefore
directly
tapeable
string
backslash
used
represent
escape
character
string
literal
many
languages
support
use
metacharacters
inside
string
literals
metacharacters
varying
interpretations
depending
context
language
generally
kind
processing
command
representing
printing
nonprinting
characters
instance
c
string
literal
backslash
followed
letter
b
n
represents
nonprinting
backspace
newline
tab
character
respectively
backslash
followed
octal
digits
sequence
interpreted
representing
arbitrary
character
specified
ascii
code
later
extended
allow
modern
hexadecimal
character
code
notation
said
x
ca
n
hear
x
n
escape
sequence
unicode
literal
characters
placed
string
u
null
character
typically
special
case
ooo
octal
notation
u
alert
b
u
backspace
f
u
c
form
feed
n
u
line
feed
newline
posix
r
u
carriage
return
newline
mac
os
earlier
u
horizontal
tab
v
u
b
vertical
tab
e
u
b
escape
character
gcc
clang
tcc
u
u
bit
unicode
character
four
hex
digits
u
u
bit
unicode
character
eight
hex
digits
unicode
character
space
currently
bits
wide
first
two
hex
digits
always
zero
u
u
bit
unicode
character
variable
number
hex
digits
x
u
bit
character
specification
hex
digit
ooo
u
bit
character
specification
octal
digit
u
double
quote
non
character
used
delimit
numeric
escapes
haskell
u
single
quote
u
c
backslash
u
f
question
mark
note
sequences
list
supported
parsers
may
escape
sequences
list
nested
escaping
edit
code
one
programming
language
embedded
inside
another
embedded
strings
may
require
multiple
levels
escaping
particularly
common
regular
expressions
sql
query
within
languages
languages
inside
shell
scripts
double
escaping
often
difficult
read
author
incorrect
quoting
nested
strings
present
security
vulnerability
use
untrusted
data
data
fields
sql
query
use
prepared
statements
prevent
code
injection
attack
php
feature
called
magic
quotes
automatically
escaped
strings
convenience
security
due
problems
removed
version
onward
raw
strings
edit
languages
provide
method
specifying
literal
processed
without
language
specific
interpretation
avoids
need
escaping
yields
legible
strings
raw
strings
particularly
useful
common
character
needs
escaped
notably
regular
expressions
nested
string
literals
backslash
widely
used
dos
windows
paths
backslash
used
path
separator
profusion
backslashes
known
leaning
toothpick
syndrome
reduced
using
raw
strings
compare
escaped
raw
pathnames
c
windows
path
c
foo
bar
baz
windows
path
c
foo
bar
baz
extreme
examples
occur
combined
uniform
naming
convention
paths
begin
thus
escaped
regular
expression
matching
unc
name
begins
backslashes
due
needing
escape
string
regular
expression
using
raw
strings
reduces
escaping
regular
expression
c
xml
documents
cdata
sections
allows
use
characters
without
xml
parser
attempting
interpret
part
structure
document
useful
including
literal
text
scripting
code
keep
document
well
formed
cdata
path
null
depth
add
path
multiline
string
literals
edit
many
languages
string
literals
contain
literal
newlines
spanning
several
lines
alternatively
newlines
escaped
often
n
example
echo
foo
bar
echo
e
foo
nbar
valid
bash
producing
foo
bar
languages
allow
literal
newlines
include
bash
lua
perl
php
r
tcl
languages
string
literals
cannot
include
newlines
two
issues
multiline
string
literals
leading
trailing
newlines
indentation
initial
final
delimiters
separate
lines
extra
newlines
delimiter
makes
string
harder
read
particularly
first
line
often
indented
differently
rest
literal
must
unindented
leading
whitespace
preserved
breaks
flow
code
literal
occurs
within
indented
code
common
solution
problems
document
style
string
literals
formally
speaking
document
string
literal
instead
stream
literal
file
literal
originate
shell
scripts
allow
literal
fed
input
external
command
opening
delimiter
end
end
word
closing
delimiter
end
line
serving
content
boundary
due
redirecting
stdin
literal
due
delimiter
arbitrary
also
avoid
problem
delimiter
collision
also
allow
initial
tabs
stripped
via
variant
syntax
end
though
leading
spaces
stripped
syntax
since
adopted
multiline
string
literals
number
languages
notably
perl
also
referred
documents
retain
syntax
despite
strings
involving
redirection
string
literals
sometimes
different
behavior
specified
variable
interpolation
python
whose
usual
string
literals
allow
literal
newlines
instead
special
form
string
designed
multiline
literals
called
triple
quoting
use
tripled
delimiter
either
literals
especially
used
inline
documentation
known
docstrings
tcl
allows
literal
newlines
strings
special
syntax
assist
multiline
strings
though
delimiters
placed
lines
leading
trailing
newlines
stripped
via
string
trim
string
map
used
strip
indentation
string
literal
concatenation
edit
languages
provide
string
literal
concatenation
adjacent
string
literals
implicitly
joined
single
literal
compile
time
feature
c
c
ruby
python
copied
c
notably
concatenation
happens
compile
time
lexical
analysis
phase
following
initial
tokenization
contrasted
run
time
string
concatenation
generally
operator
concatenation
constant
folding
occurs
compile
time
later
phase
phrase
analysis
parsing
languages
c
java
perl
support
implicit
string
literal
concatenation
instead
require
explicit
concatenation
operator
also
possible
python
illegal
c
c
see
case
concatenation
may
happen
compile
time
via
constant
folding
may
deferred
run
time
motivation
edit
c
concept
term
originate
string
literal
concatenation
introduced
two
reasons
allow
long
strings
span
multiple
lines
proper
indentation
contrast
line
continuation
destroys
indentation
scheme
allow
construction
string
literals
macros
via
stringizing
practical
terms
allows
string
concatenation
early
phases
compilation
translation
specifically
part
lexical
analysis
without
requiring
phrase
analysis
constant
folding
example
following
valid
c
c
char
hello
world
printf
hello
world
however
following
invalid
char
hello
world
printf
hello
world
string
literals
array
type
char
n
c
const
char
n
c
cannot
added
restriction
languages
particularly
important
used
combination
c
preprocessor
allow
strings
computed
following
preprocessing
particularly
macros
simple
example
char
file
message
file
message
file
called
c
expand
char
file
message
c
message
concatenated
equivalent
char
file
message
c
message
common
use
case
constructing
printf
scanf
format
strings
format
specifiers
given
macros
complex
example
uses
stringification
integers
preprocessor
define
macro
expands
sequence
string
literals
concatenated
single
string
literal
file
name
line
number
define
stringify
x
x
define
tostring
x
stringify
x
define
file
tostring
line
beyond
syntactic
requirements
c
c
implicit
concatenation
form
syntactic
sugar
making
simpler
split
string
literals
across
several
lines
avoiding
need
line
continuation
via
backslashes
allowing
one
add
comments
parts
strings
example
python
one
comment
regular
expression
way
compile
za
z
letter
underscore
za
z
letter
digit
underscore
problems
edit
implicit
string
concatenation
required
modern
compilers
implement
constant
folding
causes
hard
spot
errors
due
unintentional
concatenation
omitting
comma
particularly
vertical
lists
strings
l
foo
bar
zork
accordingly
used
languages
proposed
deprecation
python
however
removing
feature
breaks
backwards
compatibility
replacing
concatenation
operator
introduces
issues
precedence
string
literal
concatenation
occurs
lexing
prior
operator
evaluation
concatenation
via
explicit
operator
occurs
time
operators
hence
precedence
issue
potentially
requiring
parentheses
ensure
desired
evaluation
order
subtler
issue
c
c
different
types
string
literals
concatenation
implementation
defined
behavior
poses
potential
security
risk
different
kinds
strings
edit
languages
provide
one
kind
literal
different
behavior
particularly
used
indicate
raw
strings
escaping
disable
enable
variable
interpolation
uses
distinguishing
character
sets
often
done
changing
quoting
character
adding
prefix
suffix
comparable
prefixes
suffixes
integer
literals
indicate
hexadecimal
numbers
long
integers
one
oldest
examples
shell
scripts
single
quotes
indicate
raw
string
literal
string
double
quotes
escape
sequences
variable
interpolation
example
python
raw
strings
preceded
r
r
compare
c
windows
r
c
windows
though
python
raw
string
cannot
end
odd
number
backslashes
python
also
distinguishes
two
types
strings
bit
ascii
bytes
strings
default
explicitly
indicated
b
b
prefix
unicode
strings
indicated
u
u
prefix
python
strings
unicode
default
bytes
separate
bytes
type
initialized
quotes
must
prefixed
b
c
notation
raw
strings
called
quoting
c
foo
bar
baz
disables
escaping
allows
double
quotes
allow
one
represent
quotes
within
string
said
hello
c
allows
raw
strings
unicode
strings
utf
utf
utf
wide
character
strings
determined
prefixes
also
adds
literals
existing
c
string
generally
preferred
existing
c
style
strings
tcl
brace
delimited
strings
literal
quote
delimited
strings
escaping
interpolation
perl
wide
variety
strings
formally
considered
operators
known
quote
quote
like
operators
include
usual
syntax
fixed
delimiters
generic
syntax
allows
choice
delimiters
include
qr
q
qq
qx
qw
qr
tr
rexx
uses
suffix
characters
specify
characters
strings
using
hexadecimal
binary
code
e
g
x
b
b
yield
space
character
avoiding
function
call
x
c
variable
interpolation
edit
main
article
variable
interpolation
languages
differ
whether
interpret
string
literals
either
raw
variable
interpolated
variable
interpolation
process
evaluating
expression
containing
one
variables
returning
output
variables
replaced
corresponding
values
memory
sh
compatible
unix
shells
well
perl
ruby
quotation
delimited
strings
interpolated
apostrophe
delimited
strings
example
following
perl
code
name
nancy
greeting
hello
world
print
name
said
greeting
crowd
people
produces
output
nancy
said
hello
world
crowd
people
sigil
character
interpreted
indicate
variable
interpolation
similarly
printf
function
produces
output
using
notation
printf
said
crowd
people
name
greeting
metacharacters
indicate
variable
interpolation
contrasted
raw
strings
print
name
said
greeting
crowd
people
produce
output
like
name
said
greeting
crowd
people
characters
sigils
interpreted
meaning
plain
text
embedding
source
code
string
literals
edit
languages
lack
flexibility
specifying
string
literals
make
particularly
cumbersome
write
programming
code
generates
programming
code
particularly
true
generation
language
similar
output
language
example
writing
code
produce
quines
generating
output
language
within
web
template
using
xslt
generate
xslt
sql
generate
sql
generating
postscript
representation
document
printing
purposes
within
document
processing
application
written
c
language
writing
shaders
nevertheless
languages
particularly
well
adapted
produce
sort
self
similar
output
especially
support
multiple
options
avoiding
delimiter
collision
using
string
literals
code
generates
code
may
adverse
security
implications
especially
output
based
least
partially
untrusted
user
input
particularly
acute
case
web
based
applications
malicious
users
take
advantage
weaknesses
subvert
operation
application
example
mounting
sql
injection
attack
see
also
edit
character
literal
xml
literals
sigil
computer
programming
notes
edit
mw
parser
output
reflist
font
size
margin
bottom
em
list
style
type
decimal
mw
parser
output
reflist
references
font
size
margin
bottom
list
style
type
inherit
mw
parser
output
reflist
columns
column
width
em
mw
parser
output
reflist
columns
column
width
em
mw
parser
output
reflist
columns
margin
top
em
mw
parser
output
reflist
columns
ol
margin
top
mw
parser
output
reflist
columns
li
page
break
inside
avoid
break
inside
avoid
column
mw
parser
output
reflist
upper
alpha
list
style
type
upper
alpha
mw
parser
output
reflist
upper
roman
list
style
type
upper
roman
mw
parser
output
reflist
lower
alpha
list
style
type
lower
alpha
mw
parser
output
reflist
lower
greek
list
style
type
lower
greek
mw
parser
output
reflist
lower
roman
list
style
type
lower
roman
regex
given
quoted
escaped
reduce
confusion
references
edit
mw
parser
output
cite
citation
font
style
inherit
word
wrap
break
word
mw
parser
output
citation
q
quotes
mw
parser
output
citation
target
background
color
rgba
mw
parser
output
id
lock
free
mw
parser
output
citation
cs
lock
free
background
linear
gradient
transparent
transparent
url
upload
wikimedia
org
wikipedia
commons
lock
green
svg
right
em
center
px
repeat
mw
parser
output
id
lock
limited
mw
parser
output
id
lock
registration
mw
parser
output
citation
cs
lock
limited
mw
parser
output
citation
cs
lock
registration
background
linear
gradient
transparent
transparent
url
upload
wikimedia
org
wikipedia
commons
lock
gray
alt
svg
right
em
center
px
repeat
mw
parser
output
id
lock
subscription
mw
parser
output
citation
cs
lock
subscription
background
linear
gradient
transparent
transparent
url
upload
wikimedia
org
wikipedia
commons
aa
lock
red
alt
svg
right
em
center
px
repeat
mw
parser
output
cs
ws
icon
background
linear
gradient
transparent
transparent
url
upload
wikimedia
org
wikipedia
commons
c
wikisource
logo
svg
right
em
center
px
repeat
mw
parser
output
cs
code
color
inherit
background
inherit
border
none
padding
inherit
mw
parser
output
cs
hidden
error
display
none
color
mw
parser
output
cs
visible
error
color
mw
parser
output
cs
maint
display
none
color
margin
left
em
mw
parser
output
cs
format
font
size
mw
parser
output
cs
kern
left
padding
left
em
mw
parser
output
cs
kern
right
padding
right
em
mw
parser
output
citation
mw
selflink
font
weight
inherit
introduction
java
mfc
g
string
literals
constants
called
anonymous
strings
ansi
c
grammar
lex
liu
se
retrieved
june
b
appendix
b
characters
strings
escaping
rules
realworldhaskell
org
retrieved
june
b
string
mozilla
org
retrieved
june
b
c
e
f
g
h
j
k
l
escape
sequences
c
microsoft
com
retrieved
june
b
rationale
international
standard
programming
languages
c
pdf
april
pp
archived
pdf
original
retrieved
character
esc
constants
gcc
manual
retrieved
c
draft
standard
wg
n
committee
draft
april
translation
phases
p
adjacent
string
literal
tokens
concatenated
c
syntax
string
literal
concatenation
c
draft
standard
working
draft
standard
programming
language
c
pdf
phases
translation
lex
phases
p
adjacent
string
literal
tokens
concatenated
string
literals
lex
string
note
p
translation
phase
adjacent
string
literals
concatenated
programming
language
lexical
analysis
string
literals
adjacent
strings
concatenated
operator
simple
juxtaposition
ruby
ruby
programming
language
ruby
programming
language
retrieved
python
language
reference
lexical
analysis
string
literal
concatenation
multiple
adjacent
string
literals
delimited
whitespace
possibly
using
different
quoting
conventions
allowed
meaning
concatenation
b
c
python
ideas
implicit
string
literal
concatenation
considered
harmful
guido
van
rossum
may
python
language
reference
lexical
analysis
string
literal
concatenation
note
feature
defined
syntactical
level
implemented
compile
time
operator
must
used
concatenate
string
expressions
run
time
strings
java
tutorials
learning
java
language
numbers
strings
docs
oracle
com
retrieved
rationale
ansi
c
programming
language
silicon
press
p
isbn
string
literals
long
string
continued
across
multiple
lines
using
backslash
newline
line
continuation
practice
requires
continuation
string
start
first
position
next
line
permit
flexible
layout
solve
preprocessing
problems
see
committee
introduced
string
literal
concatenation
two
string
literals
row
pasted
together
null
character
middle
make
one
combined
string
literal
addition
c
language
allows
programmer
extend
string
literal
beyond
end
physical
line
without
use
backslash
newline
mechanism
thereby
destroying
indentation
scheme
program
explicit
concatenation
operator
introduced
concatenation
lexical
construct
rather
run
time
operation
rationale
ansi
c
programming
language
silicon
press
p
isbn
operator
operator
introduced
stringizing
may
used
define
expansion
causes
formal
parameter
name
following
replaced
string
literal
formed
stringizing
actual
argument
token
sequence
conjunction
string
literal
concatenation
see
use
operator
permits
construction
strings
effectively
identifier
replacement
within
string
example
standard
illustrates
feature
c
c
users
journal
volume
p
python
allow
concatenation
string
literals
stack
overflow
retrieved
line
string
stringify
using
preprocessor
directives
decompile
com
retrieved
python
language
reference
lexical
analysis
string
literal
concatenation
feature
used
reduce
number
backslashes
needed
split
long
strings
conveniently
across
long
lines
even
add
comments
parts
strings
example
dlang
issue
tracking
system
issue
warn
deprecate
implicit
concatenation
adjacent
string
literals
c
draft
standard
working
draft
standard
programming
language
c
pdf
string
literals
lex
string
note
p
concatenations
conditionally
supported
implementation
defined
behavior
archived
copy
archived
original
july
retrieved
july
cite
web
cs
maint
archived
copy
title
link
lexical
analysis
python
rc
documentation
python
org
retrieved
june
perlop
perldoc
perl
org
perl
org
retrieved
june
external
links
edit
literals
programming
newpp
limit
report
parsed
mw
cached
time
cache
expiry
reduced
expiry
false
complications
vary
revision
sha
cpu
time
usage
seconds
real
time
usage
seconds
preprocessor
visited
node
count
post
expand
include
size
bytes
template
argument
size
bytes
highest
expansion
depth
expensive
parser
function
count
unstrip
recursion
depth
unstrip
post
expand
size
bytes
lua
time
usage
seconds
lua
memory
usage
bytes
number
wikibase
entities
loaded
transclusion
expansion
time
report
ms
calls
template
total
template
reflist
template
cite
web
template
short
description
template
citation
needed
template
fix
template
pagetype
template
main
template
category
handler
template
delink
saved
parser
cache
key
enwiki
pcache
idhash
canonical
timestamp
revision
id
serialized
json
retrieved
oldid
categories
source
code
string
computer
science
hidden
categories
cs
maint
archived
copy
title
articles
short
description
short
description
matches
wikidata
articles
unsourced
statements
articles
unsourced
statements
march
articles
unsourced
statements
february
articles
example
python
programming
language
code
navigation
menu
